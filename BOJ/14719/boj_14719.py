# -*- coding: utf-8 -*-
"""BOJ_14719.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1WnTIhbmDZySXAZEuGaa4EHfDZQJSeQPB
"""

# stack
h, w = map(int, input().split())
heights = list(map(int, input().split()))

stack = []
result = 0 
for i in range(w):
    while stack and heights[i] > heights[stack[-1]]:
        top = stack.pop()
        
        if not stack:
            break
        
        distance = i - stack[-1] -1
        waters = min(heights[i], heights[stack[-1]]) - heights[top]
        result += distance * waters

    stack.append(i)
print(result)

# Two pointers
h, w = map(int, input().split())
heights = list(map(int, input().split()))

left = 0
right = w-1

max_left = heights[0]
max_right = heights[-1]

result = 0

while left < right:
    max_left = max(max_left, heights[left])
    max_right = max(max_right, heights[right])

    if max_left <= max_right:
        result += max_left - heights[left]
        left += 1
    else:
        result += max_right - heights[right]
        right -= 1
print(result)