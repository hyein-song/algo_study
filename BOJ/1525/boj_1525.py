# -*- coding: utf-8 -*-
"""BOJ_1525.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1RD7_BKiMkv15q2bHx89dfGGvNo4Or2cp
"""

import collections

def bfs(t):
    cnt = 0
    q.append([t,t.index('0')])
    v.add(t)
    while q:
        size = len(q)
        for i in range(size):
            t, zero_index = q.popleft()
                
            x = zero_index // 3
            y = zero_index % 3

            for i in range(4):
                m_x = x + move[0][i]
                m_y = y + move[1][i]

                if 0 <= m_x < 3 and 0 <= m_y < 3:
                    new_zero_index = 3*m_x+m_y
                    t_list = list(t)
                    t_list[zero_index], t_list[new_zero_index] = t_list[new_zero_index], t_list[zero_index]
                    new_t = ''.join(t_list)

                    if t == answer:
                        print('answer',len(q),q)
                        return cnt

                    if new_t not in v:
                        v.add(new_t)
                        print(len(q),q)
                        q.append([new_t,new_zero_index])
          cnt += 1
    return -1

answer = '123456780'
q = collections.deque()
a = []
move = [[0,1,-1,0],[1,0,0,-1]]
v = set()

for i in range(3):
    a.append(list(map(int, input().split())))

table = ''
for i in range(3):
    for j in range(3):
        table += str(a[i][j])

result = bfs(table)
print(result)

