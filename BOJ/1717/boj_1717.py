# -*- coding: utf-8 -*-
"""BOJ_1717.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1fXUj77LWs5C-86UqAh8NbfUQGgB_0xcn
"""

import sys
sys.setrecursionlimit(10**6)
input = sys.stdin.readline

def find_parent(x):
    if x == parent[x]:a
        return x
    else:
        u = find_parent(parent[x])
        parent[x] = u
    return u

def union(a,b):
    a = find_parent(a)
    b = find_parent(b)
    if a < b :
        parent[b] = a
    else:
        parent[a] = b

n ,m = map(int,input().split())
parent = {i:i for i in range(n+1)}

for i in range(m):
    f, a, b = map(int, input().split())
    if f:
        if find_parent(a) == find_parent(b):
            print('YES')
        else:
            print('NO')
    else:
        union(a,b)

()