# -*- coding: utf-8 -*-
"""BOJ_1865.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1_s8gOyxb87gnEGT4VIErbYhZJlg6QKrO
"""

import collections
import sys

max_value = sys.maxsize

def bf(graph):
    dist = {i:max_value for i in graph}

    for _ in range(N-1):
        for node in graph:
            for destination, time in graph[node]:
                if dist[destination] > dist[node] + time:
                    dist[destination] = dist[node] + time
    print(dist)
    for node in graph:
        for destination, time in graph[node]:
            if dist[destination] > dist[node] + time:
                print('YES')
                return 
                
    return print('NO')

TC = int(input())

for _ in range(TC):
    N, M, W = map(int, input().split())
    graph = {i:[] for i in range(1,N+1)}
    flag = True

    for i in range(M):
        s, e, t = map(int, input().split())
        graph[s].append([e, t])
        graph[e].append([s, t])

    for i in range(W):
        s, e, w = map(int, input().split())
        graph[s].append([e, -w])
    
    bf(graph)