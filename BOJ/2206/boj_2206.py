# -*- coding: utf-8 -*-
"""BOJ_2206.ipynb의 사본

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1rjpCIY0CpKbdZQSK33bsSy-hwMX_Dzth
"""

import collections
import sys

input = sys.stdin.readline

move_x = [0,0,-1,1]
move_y = [-1,1,0,0]

def bfs(x,y,wall):
    q.append([x,y,wall])
    v[x][y][wall] = 1

    while q:
        x,y,wall = q.popleft()

        if x == N-1 and y == M-1:
            return v[x][y][wall]

        for i in range(4):
            new_x = x + move_x[i]
            new_y = y + move_y[i]

            if 0 <= new_x < N and 0 <= new_y < M:
                if table[new_x][new_y] == 1 and wall == 0:
                    v[new_x][new_y][1] = v[x][y][0] +1
                    q.append([new_x,new_y,1])

                elif table[new_x][new_y] == 0 and v[new_x][new_y][wall] == 0:
                    v[new_x][new_y][wall] = v[x][y][wall]+1
                    q.append([new_x,new_y,wall])              
    return -1
            
N, M = map(int, input().split())

q = collections.deque()

table = []
for _ in range(N):
    table.append(list(map(int, list(input().strip()))))

v =[[[0 for _ in range(2)]for _ in range(M)]for _ in range(N)]
    
if N == 1 and M == 1:
    print(1)
else:
    print(bfs(0,0,0))