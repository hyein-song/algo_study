# -*- coding: utf-8 -*-
"""BOJ_3190.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1KSHoeDWw5tkvKTO0rzC5JDLq3vaeToZd
"""

# 100m

import collections

n = int(input())
k = int(input())
apples = []
for _ in range(k):
    apples.append(list(map(int, input().split())))
l = int(input())
turn = dict()
for _ in range(l):
    a, b = input().split()
    turn[int(a)] = b
    
cnt = 0
snake = collections.deque()
snake.append([1,1])
d = 0
while True :
    cnt += 1
    prehead = snake[0]
    head = prehead[:]

    if d == 0: # Right
        head[1] += 1
    elif d == 1: # Down
        head[0] += 1
    elif d == 2: # Left
        head[1] -= 1
    else: #Up 3
        head[0] -= 1

    if head in snake or head[0]<=0 or head[0]>n or head[1]<=0 or head[1]>n:
        break

    if head in apples:
        snake.appendleft(head)
        apples.remove(head)
    else:
        snake.appendleft(head)
        snake.pop()

    if cnt in turn.keys():
        if turn[cnt] == 'D':
            d = (d+1) %4
        else:
            d = (d+3) % 4

print(cnt)