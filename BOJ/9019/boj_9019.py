# -*- coding: utf-8 -*-
"""BOJ_9019.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1wA25gcRg9iiocx70f-PU3pp_DkiEKwJx
"""

import collections

def bfs(a,b):
    q = collections.deque()
    q.append([a,""])
    visited = [0] * 10000
    visited[a] = 1

    while q:
        a, result = q.popleft()
        # D
        d = (a*2) % 10000
        if d == b:
            return result+'D'
        elif visited[d] == 0:
            visited[d]= 1
            q.append([d, result+'D'])

        # S
        s = 9999 if a-1 < 0 else a-1
        if s == b:
            return result + 'S'
        elif visited[s] == 0:
            visited[s]= 1
            q.append([s, result+'S'])
            
        # L
        l = (a*10) % 10000 + a//1000
        if l == b:
            return result + 'L'
        elif visited[l] == 0:
            visited[l]= 1
            q.append([l, result+'L'])
        # R 
        r = (a//10) + (a%10) * 1000
        if r == b:
            return result + 'R'
        elif visited[r] == 0:
            visited[r]= 1
            q.append([r, result+'R'])

T = int(input())
for i in range(T):
    a, b = map(int, input().split())
    if a!= b:
        print(bfs(a,b))